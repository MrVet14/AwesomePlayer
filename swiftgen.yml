 input_dir: Awesome Player/
 output_dir: Awesome Player/SwiftGen
 
 strings:
  inputs: Views/Base.lproj
  filter: .+\.strings$
  outputs:
    - templateName: structured-swift5
      output: L10n-Constants.swift
#xcassets:
#    inputs: Resources/Assets.xcassets
#    outputs:
#      - templateName: swift5
#        output: Assets-Constants.swift
 

## Generate constants for your Assets Catalogs, including constants for images, colors, ARKit resources, etc.
##   This example also shows how to provide additional parameters to your template to customize the output.
##   - Especially the `forceProvidesNamespaces: true` param forces to create sub-namespace for each folder/group used in your Asset Catalogs, even the ones without "Provides Namespace". Without this param, SwiftGen only generates sub-namespaces for folders/groups which have the "Provides Namespace" box checked in the Inspector pane.
##   - To know which params are supported for a template, use `swiftgen template doc xcassets swift5` to open the template documentation on GitHub.
# xcassets:
#   inputs:
#     - Main.xcassets
#     - ProFeatures.xcassets
#   outputs:
#     - templateName: swift5
#       params:
#         forceProvidesNamespaces: true
#       output: XCAssets+Generated.swift

## For more info, use `swiftgen config doc` to open the full documentation on GitHub.
## https://github.com/SwiftGen/SwiftGen/tree/6.6.2/Documentation/
